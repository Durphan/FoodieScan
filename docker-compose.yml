services:
  db-menuproject:
    image: postgres:12
    container_name: db-menuproject
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: menuproject
    networks:
      - menuproject-network
    ports:
      - 8080:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      timeout: 30s
      retries: 5
  api-menuproject:
    build:
      context: ./backend/menuproject
      dockerfile: Dockerfile
    image: openjdk:17-jdk-alpine
    container_name: api-menuproject
    depends_on:
      db-menuproject:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db-menuproject:5432/menuproject?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    networks:
      - menuproject-network
    ports:
      - 9091:8080
  frontend-menuproject:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: node:20
    container_name: frontend-menuproject
    environment:
      API: http://localhost:9091
    ports:
      - 5173:4500
    networks:
      - menuproject-network
    depends_on:
      db-menuproject:
        condition: service_healthy
      api-menuproject:
        condition: service_started
networks:
  menuproject-network:
    driver: bridge
